version: '3.8'

services:
  rootbot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rootbot
    restart: unless-stopped
    volumes:
      - ./config:/app/config:ro
      - ./logs:/var/log/rootbot
      - ./memory:/var/lib/rootbot
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "5000:5000"
    security_opt:
      - apparmor=rootbot
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
    networks:
      - rootbot_net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: rootbot_elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - rootbot_net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: rootbot_kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - rootbot_net

  prometheus:
    image: prom/prometheus:latest
    container_name: rootbot_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - rootbot_net

  grafana:
    image: grafana/grafana:latest
    container_name: rootbot_grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - rootbot_net

volumes:
  es_data:
  prometheus_data:
  grafana_data:

networks:
  rootbot_net:
    driver: bridge
