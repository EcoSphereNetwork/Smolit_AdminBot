input {
  file {
    path => "/var/log/rootbot/*.json"
    codec => json
    type => "rootbot_logs"
    start_position => "beginning"
  }
}

filter {
  if [type] == "rootbot_logs" {
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    
    mutate {
      remove_field => [ "timestamp" ]
    }
    
    if [metrics] {
      ruby {
        code => '
          metrics = event.get("metrics")
          if metrics.is_a?(Hash)
            metrics.each do |k, v|
              event.set("metrics_#{k}", v.to_f)
            end
          end
        '
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "rootbot-%{+YYYY.MM.dd}"
    template => "/usr/share/logstash/templates/rootbot_template.json"
    template_name => "rootbot"
    template_overwrite => true
  }
  
  if [level] == "ERROR" or [level] == "CRITICAL" {
    email {
      to => "${ALERT_EMAIL}"
      from => "rootbot-alerts@example.com"
      subject => "RootBot Alert: %{level} - %{message}"
      body => "Error details:\n%{message}\n\nComponent: %{component}\nTimestamp: %{@timestamp}"
      via => "smtp"
      options => {
        "address" => "${SMTP_HOST}",
        "port" => "${SMTP_PORT}",
        "domain" => "${SMTP_DOMAIN}",
        "user_name" => "${SMTP_USER}",
        "password" => "${SMTP_PASSWORD}",
        "authentication" => "plain",
        "enable_starttls_auto" => true
      }
    }
  }
}
